apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  labels:
    app: order-service
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: order-service
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          env:
            - name: inventory-service-url
              value: http://inventory-service:8080
      restartPolicy: Always
  selector:
    matchLabels:
      app: order-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
      restartPolicy: Always
  selector:
    matchLabels:
      app: mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
spec:
  selector:
    matchLabels:
      app: inventory-service
  replicas: 1
  template:
    metadata:
      labels:
        app: inventory-service
    spec:
      containers:
        - name: inventory-service
          image: inventory-service
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  selector:
    app: order-service
  ports:
    - port: 8080
      targetPort: 8081
      name: http
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  labels:
    app: inventory-service
spec:
  selector:
    app: inventory-service
  ports:
    - port: 8080
